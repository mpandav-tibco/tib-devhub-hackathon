# system: ecommerce
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: ecommerce-platform
  description: This system comprises a collection of interconnected services and APIs, including a storefront web application, catalog management, shopping cart functionality, order processing, and payment integration. It leverages a microservices architecture to provide scalability and flexibility
  tags:
    - ecommerce
    - microservices
    - retail
spec:
  owner: ecommerce-team
  domain: e-commerce
  environments:
    - name: production
      baseUrl: https://ecommerce.example.com
    - name: staging
      baseUrl: https://staging.ecommerce.example.com
    - name: development
      baseUrl: https://dev.ecommerce.example.com
---
# domain: ecommerce
apiVersion: backstage.io/v1alpha1
kind: Domain
metadata:
  name: e-commerce
  description: The e-commerce domain
  tags:
    - ecommerce
    - microservices
    - retail
spec:
  owner: group:default/ecommerce-team
---
# storefront.yaml
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: storefront
  description: The user-facing storefront website
  annotations:
    jenkins.io/job-full-name: storefront-relese-v1
    backstage.io/techdocs-ref: dir:.
  tags:
    - ecommerce
    - microservices
    - retail
spec:
  type: service
  lifecycle: production
  owner: group:default/ecommerce-team
  system: ecommerce-platform
  providesApis:
    - api:default/catalog-api
    - api:default/cart-api
    - api:default/checkout-api
  consumesApis:
    - catalog-api
    - checkout-api
    - shipping-api
    - cart-api
  dependsOn:
    - component:default/user-service
    - component:default/inventory-service
    - component:default/order-service
    - component:default/shipping-service
    - resource:default/payment-gateway
  apiConsumedBy:
    - component:default/user-service
    - component:default/inventory-service
    - component:default/order-service
    - component:default/shipping-service
    - resource:default/payment-gateway
---
# catalog-api.yaml
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: catalog-api
  description: Provides product catalog information
spec:
  type: openapi
  lifecycle: production
  owner: group:default/catalog-team

  dependsOn:
    - resource:default/catalog-database
    - component:default/inventory-service
  apiConsumedBy:
    - component:default/storefront
  definition:
    $text: ../apis/catalog/catalog-api.yaml
---
# cart-api.yaml
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: cart-api
  description: Manages shopping carts and user sessions
spec:
  type: openapi
  lifecycle: production
  owner: group:default/cart-team

  dependsOn:
    - resource:default/cart-database
    - component:default/user-service
  apiConsumedBy:
    - component:default/storefront
  definition:
    $text: ../apis/cart/cart-api.yaml
---
# checkout-api.yaml
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: checkout-api
  description: Handles order processing and payment integration
spec:
  type: openapi # Corrected typo here
  lifecycle: production
  owner: group:default/checkout-team

  dependsOn:
    - component:default/order-service
    - resource:default/payment-gateway
  apiConsumedBy:
    - component:default/storefront
  definition:
    $text: ../apis/checkout/checkout-api.yaml
---
# user-service.yaml
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: user-service
  description: Manages user accounts and authentication
spec:
  type: service
  lifecycle: production
  owner: group:default/user-team
  system: ecommerce-platform
  providesApis:
    - api:default/cart-api
    - api:default/user-api
  dependsOn:
    - resource:default/user-database
---
# inventory-service.yaml
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: inventory-service
  description: Tracks product inventory levels
spec:
  type: service
  lifecycle: production
  owner: group:default/inventory-team
  system: ecommerce-platform
  dependsOn: # Corrected relationship type here
    - resource:default/inventory-database
  providesApis:
    - api:default/catalog-api
    - api:default/inventory-api
---
# order-service.yaml
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: order-service
  description: Processes and fulfills orders
spec:
  type: service
  lifecycle: production
  owner: group:default/order-team
  system: ecommerce-platform
  consumesApis:
    - resource:default/order-database
    - component:default/inventory-service
    - component:default/shipping-service
  providesApis:
    - api:default/order-api
---
# shipping-service.yaml
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: shipping-service
  description: Integrates with shipping providers
spec:
  type: service
  lifecycle: production
  owner: group:default/shipping-team
  system: ecommerce-platform
  consumesApis:
    - api:default/shipping-api
  providesApis:
    - api:default/shipping-api
---
# shipping-api.yaml
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: shipping-api
  description: Provides shipping rates and tracking information
spec:
  type: openapi
  lifecycle: production
  owner: group:default/shipping-team
  system: ecommerce-platform
  apiConsumedBy:
    - component:default/shipping-service
    - component:default/order-service
  definition:
    $text: ../apis/shipment-tracking/shipping-api.yaml
---
# payment-gateway.yaml
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: payment-gateway
  description: External payment gateway service
spec:
  type: resource
  lifecycle: production
  owner: group:default/payments-team
  system: ecommerce-platform
---
# catalog-database.yaml
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: catalog-database
  description: Database for product catalog data
spec:
  type: resource
  lifecycle: production
  owner: group:default/database-team
  system: ecommerce-platform
---
# cart-database.yaml
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: cart-database
  description: Database for shopping cart data
spec:
  type: resource
  lifecycle: production
  owner: group:default/database-team
  system: ecommerce-platform
---
# user-database.yaml
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: user-database
  description: Database for user account data
spec:
  type: resource
  lifecycle: production
  owner: group:default/database-team

---
# order-database.yaml
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: order-database
  description: Database for order information
spec:
  type: resource
  lifecycle: production
  owner: group:default/database-team

---
# inventory-database.yaml
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: inventory-database
  description: Database for inventory data
spec:
  type: resource
  lifecycle: production
  owner: group:default/database-team

---

