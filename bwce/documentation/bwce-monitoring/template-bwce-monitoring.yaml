apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: template-bwce-monitoring
  title: BWCE Monitoring (BWCEMon) Setup
  description: Template for deploying TIBCO BusinessWorks Container Edition Monitoring application in Kubernetes or Docker environments
  annotations:
    backstage.io/techdocs-ref: dir:.
  tags:
    - tibco
    - bwce
    - monitoring
    - kubernetes
    - docker
    - observability
spec:
  owner: group:default/platform-team
  type: documentation
  parameters:
    - title: Documentation Configuration
      required:
        - name
        - description
        - owner
      properties:
        name:
          title: Project Name
          type: string
          description: Name for the BWCE monitoring documentation project
          pattern: '^([a-z0-9-]+)$'
          ui:autofocus: true
          ui:help: 'Use lowercase letters, numbers, and hyphens only'
        description:
          title: Description
          type: string
          description: Brief description of your BWCE monitoring documentation
        owner:
          title: Owner
          type: string
          description: Owner of the monitoring documentation
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: Group
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

    - title: Deployment Configuration
      properties:
        deployment_type:
          title: Deployment Type
          type: string
          description: Choose deployment environment
          default: kubernetes
          enum:
            - kubernetes
            - docker
          enumNames:
            - 'Kubernetes Cluster'
            - 'Standalone Docker Container'
        
        database_type:
          title: Database Type
          type: string
          description: Database for monitoring data storage
          default: postgres
          enum:
            - postgres
            - mysql
            - h2
          enumNames:
            - 'PostgreSQL'
            - 'MySQL'
            - 'H2 (In-memory)'
        
        bwce_mon_version:
          title: BWCEMon Version
          type: string
          description: TIBCO BWCEMon version
          default: '2.8.2'
          enum:
            - '2.8.2'
            - '2.9.0'
            - '2.10.0'

        enable_loadbalancer:
          title: Enable Load Balancer
          type: boolean
          description: Enable LoadBalancer service for external access (Kubernetes only)
          default: true
          ui:widget: radio

    - title: Database Configuration
      properties:
        db_host:
          title: Database Host
          type: string
          description: Database server hostname or IP address
          default: 'postgres-service'
        
        db_port:
          title: Database Port
          type: string
          description: Database server port
          default: '5432'
        
        db_name:
          title: Database Name
          type: string
          description: Database name for monitoring data
          default: 'bwcemon'

        db_username:
          title: Database Username
          type: string
          description: Database username
          default: 'postgres'

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./skeleton
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          deployment_type: ${{ parameters.deployment_type }}
          database_type: ${{ parameters.database_type }}
          bwce_mon_version: ${{ parameters.bwce_mon_version }}
          enable_loadbalancer: ${{ parameters.enable_loadbalancer }}
          db_host: ${{ parameters.db_host }}
          db_port: ${{ parameters.db_port }}
          db_name: ${{ parameters.db_name }}
          db_username: ${{ parameters.db_username }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}