apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: flogo-template-cicd-jenkins
  title: Flogo CI/CD with Jenkins Template
  description: Create Flogo project with Jenkins CI/CD pipeline for automated build, test, and deployment workflows
  tags:
    - tibco
    - flogo
    - cicd
    - jenkins
    - devops
    - automation
    - recommended
spec:
  owner: ACME
  type: library

  parameters:
    - title: Fill in some steps
      required:
        - name
        - description
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the Flogo CI/CD Project
          ui:field: EntityNamePicker
          ui:autofocus: true
        description:
          title: Description
          type: string
          description: A description for the Flogo CI/CD Project
        system:
          title: System
          type: string
          description: Target System 
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: system
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
    - title: CI/CD Configuration
      properties:
        jenkinsUrl:
          title: Jenkins URL
          type: string
          description: URL of the Jenkins server
          default: http://localhost:8080
        enableTests:
          title: Enable Automated Tests
          type: boolean
          description: Enable automated testing in pipeline
          default: true
        enableSonarQube:
          title: Enable SonarQube Analysis
          type: boolean
          description: Enable code quality analysis
          default: false
        deploymentTarget:
          title: Deployment Target
          type: string
          description: Target environment for deployment
          enum: ["dev", "staging", "production", "k8s"]
          default: dev
        buildAgent:
          title: Build Agent Label
          type: string
          description: Jenkins build agent label
          default: flogo

  steps:
    - id: fetch
      name: Flogo CI/CD Jenkins Skeleton
      action: fetch:template
      input:
        url: ./skeleton
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          jenkinsUrl: ${{ parameters.jenkinsUrl }}
          enableTests: ${{ parameters.enableTests }}
          enableSonarQube: ${{ parameters.enableSonarQube }}
          deploymentTarget: ${{ parameters.deploymentTarget }}
          buildAgent: ${{ parameters.buildAgent }}
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}