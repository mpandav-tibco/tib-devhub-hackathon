apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: flogo-trigger-mysql-binlog-listener
  title: MySQL Binlog Listener Trigger
  description: Real-time MySQL/MariaDB binlog monitoring with SSL/TLS support, schema enhancement, and comprehensive change data capture capabilities
  tags:
    - flogo
    - trigger
    - mysql
    - mariadb
    - binlog
    - cdc
    - change-data-capture
    - real-time
    - event-driven
    - database
    - ssl-tls
    - monitoring
spec:
  owner: flogo-team
  type: flogo-trigger
  parameters:
    - title: Trigger Information
      required:
        - trigger_name
        - namespace
      properties:
        trigger_name:
          title: Trigger Name
          type: string
          description: Name for your MySQL Binlog Listener trigger instance
          pattern: '^[a-zA-Z][a-zA-Z0-9_-]*$'
          default: mysql-binlog-listener
        namespace:
          title: Namespace
          type: string
          description: Namespace for the trigger (e.g., com.company.project)
          pattern: '^[a-zA-Z][a-zA-Z0-9_.]*$'
          default: com.example

    - title: Database Connection
      required:
        - mysql_host
        - mysql_port
        - mysql_user
        - mysql_password
        - database_name
      properties:
        mysql_host:
          title: MySQL Host
          type: string
          description: MySQL/MariaDB server hostname or IP address
          default: localhost
        mysql_port:
          title: MySQL Port
          type: integer
          description: MySQL/MariaDB server port
          minimum: 1
          maximum: 65535
          default: 3306
        mysql_user:
          title: MySQL User
          type: string
          description: Database user with REPLICATION privileges
          default: repl_user
        mysql_password:
          title: MySQL Password
          type: string
          description: Database user password
          ui:widget: password
        database_name:
          title: Database Name
          type: string
          description: Target database name to monitor
          pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'

    - title: SSL/TLS Configuration
      properties:
        ssl_mode:
          title: SSL Mode
          type: string
          description: SSL/TLS connection mode
          enum:
            - disable
            - require
            - verify-ca
            - verify-full
          enumNames:
            - Disable (No SSL)
            - Require (SSL Required)
            - Verify CA (Verify Certificate Authority)
            - Verify Full (Full Certificate Validation)
          default: disable
        ssl_ca_file:
          title: SSL CA Certificate File
          type: string
          description: Path to CA certificate file (required for verify-ca/verify-full)
          default: ""
        ssl_cert_file:
          title: SSL Client Certificate File
          type: string
          description: Path to client certificate file for mutual TLS
          default: ""
        ssl_key_file:
          title: SSL Client Key File
          type: string
          description: Path to client private key file for mutual TLS
          default: ""
        skip_ssl_verify:
          title: Skip SSL Verification
          type: boolean
          description: Skip SSL certificate verification (not recommended for production)
          default: false

    - title: Binlog Configuration
      properties:
        server_id:
          title: Server ID
          type: integer
          description: Unique MySQL server ID (1001-4999 recommended)
          minimum: 1
          maximum: 4294967295
          default: 1001
        binlog_file:
          title: Starting Binlog File
          type: string
          description: Starting binlog file (leave empty to use current)
          default: ""
        binlog_position:
          title: Starting Binlog Position
          type: integer
          description: Starting binlog position
          minimum: 0
          default: 4
        monitored_tables:
          title: Monitored Tables
          type: string
          description: Comma-separated list of tables to monitor (empty = all tables)
          default: ""
        event_types:
          title: Event Types to Capture
          type: string
          description: Types of database events to monitor
          enum:
            - ALL
            - INSERT
            - UPDATE
            - DELETE
          default: ALL

    - title: Advanced Features
      properties:
        include_schema:
          title: Include Schema Information
          type: boolean
          description: Include column names and type information (recommended)
          default: true
        enable_health_monitoring:
          title: Enable Health Monitoring
          type: boolean
          description: Periodic connection health checks with metrics
          default: true
        enable_heartbeat:
          title: Enable Heartbeat
          type: boolean
          description: Connection heartbeat for monitoring
          default: true
        enable_opentelemetry:
          title: Enable OpenTelemetry Integration
          type: boolean
          description: Distributed tracing with MySQL-specific metadata
          default: false

    - title: Connection Management
      properties:
        connection_timeout:
          title: Connection Timeout
          type: string
          description: Database connection timeout (e.g., 30s, 1m)
          pattern: '^[0-9]+[smh]$'
          default: "30s"
        read_timeout:
          title: Read Timeout
          type: string
          description: Database read timeout (e.g., 30s, 1m)
          pattern: '^[0-9]+[smh]$'
          default: "30s"
        max_retry_attempts:
          title: Max Retry Attempts
          type: integer
          description: Maximum connection retry attempts
          minimum: 0
          maximum: 10
          default: 3
        retry_delay:
          title: Retry Delay
          type: string
          description: Delay between retry attempts (e.g., 5s, 10s)
          pattern: '^[0-9]+[smh]$'
          default: "5s"
        health_check_interval:
          title: Health Check Interval
          type: string
          description: Health check frequency (e.g., 60s, 5m)
          pattern: '^[0-9]+[smh]$'
          default: "60s"
        heartbeat_interval:
          title: Heartbeat Interval
          type: string
          description: Heartbeat interval (e.g., 30s, 1m)
          pattern: '^[0-9]+[smh]$'
          default: "30s"

    - title: Repository Information
      required:
        - repo_name
      properties:
        repo_name:
          title: Repository Name
          type: string
          description: Name of the repository to create
          pattern: '^[a-zA-Z][a-zA-Z0-9_-]*$'
        description:
          title: Description
          type: string
          description: A brief description of your MySQL Binlog Listener trigger
          default: MySQL Binlog Listener trigger for real-time change data capture and event-driven architectures

  steps:
    - id: fetch-base
      name: Fetch Base Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          trigger_name: ${{ parameters.trigger_name }}
          namespace: ${{ parameters.namespace }}
          mysql_host: ${{ parameters.mysql_host }}
          mysql_port: ${{ parameters.mysql_port }}
          mysql_user: ${{ parameters.mysql_user }}
          mysql_password: ${{ parameters.mysql_password }}
          database_name: ${{ parameters.database_name }}
          ssl_mode: ${{ parameters.ssl_mode }}
          ssl_ca_file: ${{ parameters.ssl_ca_file }}
          ssl_cert_file: ${{ parameters.ssl_cert_file }}
          ssl_key_file: ${{ parameters.ssl_key_file }}
          skip_ssl_verify: ${{ parameters.skip_ssl_verify }}
          server_id: ${{ parameters.server_id }}
          binlog_file: ${{ parameters.binlog_file }}
          binlog_position: ${{ parameters.binlog_position }}
          monitored_tables: ${{ parameters.monitored_tables }}
          event_types: ${{ parameters.event_types }}
          include_schema: ${{ parameters.include_schema }}
          enable_health_monitoring: ${{ parameters.enable_health_monitoring }}
          enable_heartbeat: ${{ parameters.enable_heartbeat }}
          enable_opentelemetry: ${{ parameters.enable_opentelemetry }}
          connection_timeout: ${{ parameters.connection_timeout }}
          read_timeout: ${{ parameters.read_timeout }}
          max_retry_attempts: ${{ parameters.max_retry_attempts }}
          retry_delay: ${{ parameters.retry_delay }}
          health_check_interval: ${{ parameters.health_check_interval }}
          heartbeat_interval: ${{ parameters.heartbeat_interval }}
          repo_name: ${{ parameters.repo_name }}
          description: ${{ parameters.description }}

    - id: publish
      name: Publish to Repository
      action: publish:github
      input:
        repoUrl: github.com?repo=${{ parameters.repo_name }}
        description: ${{ parameters.description }}
        defaultBranch: main
        gitCommitMessage: 'Initial commit: MySQL Binlog Listener Trigger'

    - id: register
      name: Register in Catalog
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in Catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}