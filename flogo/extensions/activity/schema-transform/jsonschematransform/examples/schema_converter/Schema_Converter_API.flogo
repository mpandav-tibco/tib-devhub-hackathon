{
  "imports": [
    "github.com/project-flogo/flow",
    "github.com/project-flogo/contrib/activity/noop",
    "github.com/milindpandav/activity/jsonschematransform",
    "github.com/tibco/flogo-general/src/app/General/activity/log",
    "github.com/project-flogo/contrib/activity/actreturn",
    "github.com/project-flogo/custom-extensions/activity/xsdschematransform",
    "github.com/tibco/flogo-general/src/app/General/activity/parsejson",
    "github.com/tibco/flogo-general/src/app/General/activity/jsontoxml",
    "github.com/milindpandav/activity/avroschematransform",
    "github.com/tibco/flogo-general/src/app/General/trigger/rest",
    "github.com/project-flogo/contrib/function/coerce",
    "github.com/project-flogo/contrib/function/string",
    "git.tibco.com/git/product/ipaas/wi-contrib.git/function/boolean",
    "git.tibco.com/git/product/ipaas/wi-contrib.git/function/utility"
  ],
  "name": "Schema_Converter_API",
  "description": "",
  "version": "1.0.0",
  "type": "flogo:app",
  "appModel": "1.1.1",
  "tags": [],
  "triggers": [
    {
      "ref": "#rest",
      "name": "tibco-wi-rest",
      "description": "Simple REST Trigger",
      "settings": {
        "port": 9999,
        "APISpecUpdate": false,
        "swagger": "",
        "swaggerVersion": "v2",
        "apiVersion": "1.0.0",
        "secureConnection": false,
        "serverKey": "",
        "caCertificate": ""
      },
      "id": "ReceiveHTTPMessage",
      "handlers": [
        {
          "description": "Convert JSON Schema to XSD",
          "settings": {
            "Method": "POST",
            "reqType": "application/json",
            "Path": "/j2xsd/v1",
            "OutputValidation": false
          },
          "action": {
            "ref": "github.com/project-flogo/flow",
            "settings": {
              "flowURI": "res://flow:JSON_Schema_to_Other_Format"
            },
            "input": {
              "body": {
                "mapping": {
                  "jsonSchema": "=$.body.jsonSchema",
                  "targetNamespace": "=$.body.targetNamespace",
                  "rootElementName": "=$.body.rootElementName"
                }
              }
            },
            "output": {
              "code": "=$.code",
              "data": "=$.data"
            }
          },
          "reply": {
            "code": 200,
            "configureResponseCodes": false,
            "message": {}
          },
          "schemas": {
            "reply": {
              "data": {
                "type": "json",
                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}}",
                "fe_metadata": "{}"
              },
              "responseBody": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
              },
              "responseCodesSchema": {
                "type": "json",
                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"string\"},\"responseType\":{\"type\":\"string\"},\"responseSchema\":{\"type\":\"string\"},\"responseHeaders\":{\"type\":\"string\"}}}}",
                "fe_metadata": "[{\"code\":\"200\",\"responseType\":\"object\",\"responseSchema\":\"\",\"responseHeaders\":\"\"}]"
              }
            },
            "output": {
              "headers": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
              },
              "body": {
                "type": "json",
                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"rootElementName\":{\"type\":\"string\"},\"targetNamespace\":{\"type\":\"string\"},\"jsonSchema\":{\"type\":\"string\"}}}",
                "fe_metadata": "{\n    \"rootElementName\": \"PurchaseOrder\",\n    \"targetNamespace\": \"http://www.example.com/po\",\n    \"jsonSchema\": \"\"\n  }"
              }
            }
          },
          "name": "JSON_Schema_to_Other_Format"
        },
        {
          "description": "Convert XSD To JSON Schema",
          "settings": {
            "Method": "POST",
            "reqType": "application/json",
            "Path": "/xsd2json/v1",
            "OutputValidation": false
          },
          "action": {
            "ref": "github.com/project-flogo/flow",
            "settings": {
              "flowURI": "res://flow:XSD_To_to_Other_Schema_Format"
            },
            "input": {
              "body": "=$.body",
              "headers": "=$.headers"
            },
            "output": {
              "code": "=$.code",
              "data": "=$.data"
            }
          },
          "reply": {
            "code": 200,
            "configureResponseCodes": false,
            "message": {}
          },
          "schemas": {
            "reply": {
              "data": {
                "type": "json",
                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}}",
                "fe_metadata": "{\n}"
              },
              "responseBody": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
              }
            },
            "output": {
              "headers": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
              },
              "body": {
                "type": "json",
                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"xsd\":{\"type\":\"string\"}}}",
                "fe_metadata": "{\n    \"xsd\":\"\"\n}"
              }
            }
          },
          "name": "XSD_To_to_Other_Schema_Format"
        },
        {
          "description": "Convert JSON Payload to XML Payload",
          "settings": {
            "Method": "POST",
            "reqType": "application/json",
            "Path": "/json2xml",
            "OutputValidation": false
          },
          "action": {
            "ref": "github.com/project-flogo/flow",
            "settings": {
              "flowURI": "res://flow:JSON_To_XML"
            },
            "input": {
              "body": "=$.body"
            },
            "output": {
              "code": "=$.code",
              "message": "=$.message"
            }
          },
          "reply": {
            "code": 200,
            "configureResponseCodes": false,
            "message": {}
          },
          "schemas": {
            "reply": {
              "responseBody": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
              }
            },
            "output": {
              "headers": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
              },
              "body": {
                "type": "json",
                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}}",
                "fe_metadata": "{\n}"
              }
            }
          },
          "name": "JSON_To_XML"
        },
        {
          "description": "",
          "settings": {
            "Method": "POST",
            "reqType": "application/json",
            "Path": "/a2o/v1",
            "OutputValidation": false
          },
          "action": {
            "ref": "github.com/project-flogo/flow",
            "settings": {
              "flowURI": "res://flow:AVRO_To_Other_Schema_Format"
            },
            "input": {
              "headers": "=$.headers",
              "body": "=$.body"
            },
            "output": {
              "code": "=$.code",
              "data": "=$.data"
            }
          },
          "reply": {
            "code": 200,
            "configureResponseCodes": false,
            "message": {}
          },
          "schemas": {
            "reply": {
              "data": {
                "type": "json",
                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}}",
                "fe_metadata": "{}"
              },
              "responseBody": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
              }
            },
            "output": {
              "headers": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
              },
              "body": {
                "type": "json",
                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}}",
                "fe_metadata": "{}"
              }
            }
          },
          "name": "AVRO_To_Other_Schema_Format"
        }
      ]
    }
  ],
  "resources": [
    {
      "id": "flow:JSON_Schema_to_Other_Format",
      "data": {
        "name": "JSON Schema to Other Format",
        "description": "Convert JSON Schema to XSD",
        "links": [
          {
            "id": 1,
            "from": "StartActivity",
            "to": "JSONSchemaTransformer1",
            "type": "label",
            "label": "StartActivity to JSONSchemaTransformer1"
          },
          {
            "id": 2,
            "from": "JSONSchemaTransformer1",
            "to": "LogSuccess",
            "type": "expression",
            "label": "JSONSchemaTransformer1 to LogSuccess",
            "value": "$activity[JSONSchemaTransformer1].error != boolean.true()"
          },
          {
            "id": 3,
            "from": "LogSuccess",
            "to": "200",
            "type": "label",
            "label": "LogSuccess to 200"
          },
          {
            "id": 4,
            "from": "JSONSchemaTransformer1",
            "to": "LogError",
            "type": "exprOtherwise",
            "label": "JSONSchemaTransformer1 to LogError"
          },
          {
            "id": 5,
            "from": "LogError",
            "to": "Error",
            "type": "label",
            "label": "LogMessage to Return1"
          }
        ],
        "tasks": [
          {
            "id": "StartActivity",
            "name": "StartActivity",
            "description": "NoOp Activity",
            "activity": {
              "ref": "#noop"
            }
          },
          {
            "id": "JSONSchemaTransformer1",
            "name": "JSONSchemaTransformer1",
            "description": "Transforms JSON Schema to XSD, Avro, and other formats. Supports conversion to XSD, Avro, or both formats simultaneously with comprehensive feature support.",
            "activity": {
              "ref": "#jsonschematransform",
              "settings": {
                "outputFormat": "both"
              },
              "input": {
                "jsonSchemaString": "=$flow.body.jsonSchema",
                "outputFormat": "",
                "rootElementName": "=$flow.body.rootElementName",
                "targetNamespace": "=$flow.body.targetNamespace",
                "avroRecordName": "RootRecord",
                "avroNamespace": "com.example"
              },
              "output": {
                "error": false
              }
            }
          },
          {
            "id": "LogSuccess",
            "name": "LogSuccess",
            "description": "Simple Log Message Activity",
            "activity": {
              "ref": "#log",
              "input": {
                "Log Level": "INFO",
                "flowInfo": false,
                "message": "=string.concat(\"###### Transformed JSON Payload - \", coerce.toString($activity[JSONSchemaTransformer1]))",
                "logLevel": ""
              }
            }
          },
          {
            "id": "200",
            "name": "200",
            "description": "Simple Return Activity",
            "activity": {
              "ref": "#actreturn",
              "settings": {
                "mappings": {
                  "code": 200,
                  "data": "=$activity[JSONSchemaTransformer1]"
                }
              }
            }
          },
          {
            "id": "LogError",
            "name": "LogError",
            "description": "Simple Log Message Activity",
            "activity": {
              "ref": "#log",
              "input": {
                "Log Level": "INFO",
                "flowInfo": false,
                "message": "=string.concat(\"###### ERROR in jsonSchema to XSD Conversion - \", $activity[JSONSchemaTransformer1].errorMessage)",
                "logLevel": ""
              }
            }
          },
          {
            "id": "Error",
            "name": "Error",
            "description": "Simple Return Activity",
            "activity": {
              "ref": "#actreturn",
              "settings": {
                "mappings": {
                  "code": 500,
                  "data": "=$activity[JSONSchemaTransformer1]"
                }
              }
            }
          }
        ],
        "fe_metadata": "eyIyMDAiOnsieCI6NzkzLCJ5Ijo5N30sIlN0YXJ0QWN0aXZpdHkiOnsieCI6MTAwLCJ5IjoxMDB9LCJKU09OU2NoZW1hVHJhbnNmb3JtZXIxIjp7IngiOjI4NCwieSI6OTR9LCJMb2dTdWNjZXNzIjp7IngiOjU3MSwieSI6OTF9LCJMb2dFcnJvciI6eyJ4Ijo1NzUsInkiOjIzNn0sIkVycm9yIjp7IngiOjc5NCwieSI6MjM4fX0=",
        "metadata": {
          "input": [
            {
              "name": "headers",
              "type": "object",
              "schema": {
                "type": "json",
                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
              }
            },
            {
              "name": "body",
              "type": "object",
              "schema": {
                "type": "json",
                "value": "{\"rootElementName\":{\"type\":\"string\"},\"targetNamespace\":{\"type\":\"string\"},\"jsonSchema\":{\"type\":\"string\"}}"
              }
            },
            {
              "name": "requestURI",
              "type": "string"
            },
            {
              "name": "method",
              "type": "string"
            }
          ],
          "output": [
            {
              "name": "code",
              "type": "integer"
            },
            {
              "name": "data",
              "type": "object"
            }
          ],
          "fe_metadata": {
            "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]},\"body\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"rootElementName\":{\"type\":\"string\"},\"targetNamespace\":{\"type\":\"string\"},\"jsonSchema\":{\"type\":\"string\"}}},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
            "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"data\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}}},\"required\":[]}"
          }
        },
        "explicitReply": true
      }
    },
    {
      "id": "flow:XSD_To_to_Other_Schema_Format",
      "data": {
        "name": "XSD To to Other Schema Format",
        "description": "Convert XSD To JSON Schema",
        "links": [
          {
            "id": 1,
            "from": "StartActivity",
            "to": "XSDSchemaTransform",
            "type": "label",
            "label": "StartActivity to XSDSchemaTransform"
          },
          {
            "id": 2,
            "from": "XSDSchemaTransform",
            "to": "LogMessage",
            "type": "expression",
            "label": "XSDSchemaTransform to LogMessage",
            "value": "$activity[XSDSchemaTransform].error != boolean.true()"
          },
          {
            "id": 3,
            "from": "LogMessage",
            "to": "200",
            "type": "label",
            "label": "LogMessage to 200"
          },
          {
            "id": 4,
            "from": "XSDSchemaTransform",
            "to": "LogMessage1",
            "type": "exprOtherwise",
            "label": "XSDSchemaTransform to LogMessage1"
          },
          {
            "id": 5,
            "from": "LogMessage1",
            "to": "500",
            "type": "label",
            "label": "LogMessage1 to 500"
          }
        ],
        "tasks": [
          {
            "id": "StartActivity",
            "name": "StartActivity",
            "description": "NoOp Activity",
            "activity": {
              "ref": "#noop"
            }
          },
          {
            "id": "XSDSchemaTransform",
            "name": "XSDSchemaTransform",
            "description": "Comprehensive XSD Schema transformation activity supporting conversion to JSON Schema and Avro Schema with extensive feature coverage",
            "activity": {
              "ref": "#xsdschematransform",
              "input": {
                "xsdString": "=$flow.body.xsd",
                "outputFormat": "both",
                "validateInput": false,
                "preserveOrder": false,
                "optimizeOutput": false,
                "jsonSchemaVersion": "2020-12",
                "jsonSchemaTitle": "",
                "jsonSchemaId": "",
                "addExamples": false,
                "avroRecordName": "RootRecord",
                "avroNamespace": "com.example",
                "avroLogicalTypes": false,
                "avroUnionMode": "nullable",
                "handleAny": "object",
                "handleChoice": "union",
                "includeAttributes": true,
                "namespaceHandling": "ignore",
                "complexTypeMode": "inline"
              }
            }
          },
          {
            "id": "LogMessage",
            "name": "LogMessage",
            "description": "Simple Log Message Activity",
            "activity": {
              "ref": "#log",
              "input": {
                "Log Level": "INFO",
                "flowInfo": false,
                "message": "=string.concat(\"###### Transformed Payload - \", coerce.toString($activity[XSDSchemaTransform]))",
                "logLevel": ""
              }
            }
          },
          {
            "id": "200",
            "name": "200",
            "description": "Simple Return Activity",
            "activity": {
              "ref": "#actreturn",
              "settings": {
                "mappings": {
                  "code": 200,
                  "data": "=$activity[XSDSchemaTransform]"
                }
              }
            }
          },
          {
            "id": "LogMessage1",
            "name": "LogMessage1",
            "description": "Simple Log Message Activity",
            "activity": {
              "ref": "#log",
              "input": {
                "Log Level": "INFO",
                "flowInfo": false,
                "message": "=string.concat(\"###### ERROR - \", coerce.toString($activity[XSDSchemaTransform]))",
                "logLevel": ""
              }
            }
          },
          {
            "id": "500",
            "name": "500",
            "description": "Simple Return Activity",
            "activity": {
              "ref": "#actreturn",
              "settings": {
                "mappings": {
                  "code": 500,
                  "data": "=$activity[XSDSchemaTransform]"
                }
              }
            }
          }
        ],
        "fe_metadata": "eyIyMDAiOnsieCI6NzA1LCJ5Ijo5OX0sIjUwMCI6eyJ4Ijo3MDcsInkiOjIxN30sIlN0YXJ0QWN0aXZpdHkiOnsieCI6MTAwLCJ5IjoxMDB9LCJYU0RTY2hlbWFUcmFuc2Zvcm0iOnsieCI6MjAyLCJ5IjoyMDl9LCJMb2dNZXNzYWdlIjp7IngiOjQxNSwieSI6ODh9LCJMb2dNZXNzYWdlMSI6eyJ4Ijo0NDQsInkiOjI1OH19",
        "metadata": {
          "input": [
            {
              "name": "headers",
              "type": "object",
              "schema": {
                "type": "json",
                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
              }
            },
            {
              "name": "body",
              "type": "object",
              "schema": {
                "type": "json",
                "value": "{\"xsd\":{\"type\":\"string\"}}"
              }
            },
            {
              "name": "requestURI",
              "type": "string"
            },
            {
              "name": "method",
              "type": "string"
            }
          ],
          "output": [
            {
              "name": "code",
              "type": "integer"
            },
            {
              "name": "data",
              "type": "object"
            }
          ],
          "fe_metadata": {
            "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]},\"body\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"xsd\":{\"type\":\"string\"}}},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
            "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"data\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}}},\"required\":[]}"
          }
        },
        "explicitReply": true
      }
    },
    {
      "id": "flow:JSON_To_XML",
      "data": {
        "name": "JSON To XML",
        "description": "Convert JSON Payload to XML Payload",
        "links": [
          {
            "id": 1,
            "from": "StartActivity",
            "to": "ParseJSON",
            "type": "label",
            "label": "StartActivity to ParseJSON"
          },
          {
            "id": 2,
            "from": "ParseJSON",
            "to": "JSONToXML",
            "type": "label",
            "label": "ParseJSON to JSONToXML"
          },
          {
            "id": 3,
            "from": "JSONToXML",
            "to": "Return",
            "type": "label",
            "label": "JSONToXML to Return"
          }
        ],
        "tasks": [
          {
            "id": "StartActivity",
            "name": "StartActivity",
            "description": "NoOp Activity",
            "activity": {
              "ref": "#noop"
            }
          },
          {
            "id": "ParseJSON",
            "name": "ParseJSON",
            "description": "Parses JSON string into JSON object",
            "activity": {
              "ref": "#parsejson",
              "input": {
                "validate": false,
                "jsonString": "=coerce.toString($flow.body)"
              },
              "schemas": {
                "output": {
                  "jsonObject": "schema://customer"
                }
              },
              "feSchemaMap": {}
            }
          },
          {
            "id": "JSONToXML",
            "name": "JSONToXML",
            "description": "Converts JSON into XML string",
            "activity": {
              "ref": "#jsontoxml",
              "input": {
                "jsonString": "=utility.renderJSON(($activity[ParseJSON].jsonObject), boolean.false())"
              }
            }
          },
          {
            "id": "Return",
            "name": "Return",
            "description": "Simple Return Activity",
            "activity": {
              "ref": "#actreturn",
              "settings": {
                "mappings": {
                  "code": 200,
                  "message": "=$activity[JSONToXML].xmlString"
                }
              }
            }
          }
        ],
        "fe_metadata": "eyJTdGFydEFjdGl2aXR5Ijp7IngiOjEwMCwieSI6MTAwfSwiUGFyc2VKU09OIjp7IngiOjI3MywieSI6OTN9LCJKU09OVG9YTUwiOnsieCI6NTA1LCJ5Ijo5MH0sIlJldHVybiI6eyJ4Ijo3ODMsInkiOjg5fX0=",
        "metadata": {
          "input": [
            {
              "name": "headers",
              "type": "object",
              "schema": {
                "type": "json",
                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
              }
            },
            {
              "name": "body",
              "type": "object"
            },
            {
              "name": "requestURI",
              "type": "string"
            },
            {
              "name": "method",
              "type": "string"
            }
          ],
          "output": [
            {
              "name": "code",
              "type": "integer"
            },
            {
              "name": "message",
              "type": "string"
            }
          ],
          "fe_metadata": {
            "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]},\"body\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
            "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false}},\"required\":[]}"
          }
        },
        "explicitReply": true
      }
    },
    {
      "id": "flow:AVRO_To_Other_Schema_Format",
      "data": {
        "name": "AVRO To Other Schema Format",
        "description": "",
        "links": [
          {
            "id": 1,
            "from": "StartActivity",
            "to": "AvroSchemaTransformer",
            "type": "label",
            "label": "StartActivity to AvroSchemaTransformer"
          },
          {
            "id": 2,
            "from": "AvroSchemaTransformer",
            "to": "LogMessage",
            "type": "expression",
            "label": "AvroSchemaTransformer to LogMessage",
            "value": "$activity[AvroSchemaTransformer].error != boolean.true()"
          },
          {
            "id": 3,
            "from": "LogMessage",
            "to": "200",
            "type": "label",
            "label": "LogMessage to 200"
          },
          {
            "id": 4,
            "from": "AvroSchemaTransformer",
            "to": "LogMessage1",
            "type": "exprOtherwise",
            "label": "AvroSchemaTransformer to LogMessage1"
          },
          {
            "id": 5,
            "from": "LogMessage1",
            "to": "500",
            "type": "label",
            "label": "LogMessage1 to 500"
          }
        ],
        "tasks": [
          {
            "id": "StartActivity",
            "name": "StartActivity",
            "description": "NoOp Activity",
            "activity": {
              "ref": "#noop"
            }
          },
          {
            "id": "AvroSchemaTransformer",
            "name": "AvroSchemaTransformer",
            "description": "Transforms Avro schema to JSON Schema and/or XSD format. Supports conversion to JSON Schema, XSD, or both formats simultaneously.",
            "activity": {
              "ref": "#avroschematransform",
              "settings": {
                "outputFormat": "both"
              },
              "input": {
                "avroSchemaString": "=coerce.toString($flow.body)",
                "outputFormat": "",
                "rootElementName": "root",
                "targetNamespace": ""
              }
            }
          },
          {
            "id": "LogMessage",
            "name": "LogMessage",
            "description": "Simple Log Message Activity",
            "activity": {
              "ref": "#log",
              "input": {
                "Log Level": "INFO",
                "flowInfo": false,
                "message": "=string.concat(\"##### Transformed Payload - \", coerce.toString($activity[AvroSchemaTransformer]))",
                "logLevel": ""
              }
            }
          },
          {
            "id": "200",
            "name": "200",
            "description": "Simple Return Activity",
            "activity": {
              "ref": "#actreturn",
              "settings": {
                "mappings": {
                  "code": 200,
                  "data": "=$activity[AvroSchemaTransformer]"
                }
              }
            }
          },
          {
            "id": "LogMessage1",
            "name": "LogMessage1",
            "description": "Simple Log Message Activity",
            "activity": {
              "ref": "#log",
              "input": {
                "Log Level": "INFO",
                "flowInfo": false,
                "message": "=string.concat(\"##### ERROR - \", coerce.toString($activity[AvroSchemaTransformer]))",
                "logLevel": ""
              }
            }
          },
          {
            "id": "500",
            "name": "500",
            "description": "Simple Return Activity",
            "activity": {
              "ref": "#actreturn",
              "settings": {
                "mappings": {
                  "code": 500,
                  "data": "=$activity[AvroSchemaTransformer]"
                }
              }
            }
          }
        ],
        "fe_metadata": "eyIyMDAiOnsieCI6ODU3LCJ5Ijo5M30sIjUwMCI6eyJ4Ijo4NzUsInkiOjI3OX0sIlN0YXJ0QWN0aXZpdHkiOnsieCI6MTAwLCJ5IjoxMDB9LCJBdnJvU2NoZW1hVHJhbnNmb3JtZXIiOnsieCI6MzY3LCJ5Ijo5M30sIkxvZ01lc3NhZ2UiOnsieCI6NjMyLCJ5Ijo5MX0sIkxvZ01lc3NhZ2UxIjp7IngiOjU5NCwieSI6Mjc1fX0=",
        "metadata": {
          "input": [
            {
              "name": "headers",
              "type": "object",
              "schema": {
                "type": "json",
                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
              }
            },
            {
              "name": "body",
              "type": "object"
            },
            {
              "name": "requestURI",
              "type": "string"
            },
            {
              "name": "method",
              "type": "string"
            }
          ],
          "output": [
            {
              "name": "code",
              "type": "integer"
            },
            {
              "name": "data",
              "type": "object"
            }
          ],
          "fe_metadata": {
            "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]},\"body\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
            "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"data\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{}}},\"required\":[]}"
          }
        },
        "explicitReply": true
      }
    }
  ],
  "properties": [],
  "schemas": {
    "customer": {
      "type": "json",
      "value": "{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"properties\": {\n        \"customer\": {\n            \"properties\": {\n                \"billingAddress\": {\n                    \"properties\": {\n                        \"city\": {\n                            \"type\": \"string\"\n                        },\n                        \"state\": {\n                            \"type\": \"string\"\n                        },\n                        \"street\": {\n                            \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\n                        \"street\",\n                        \"city\",\n                        \"state\",\n                        \"zipCode\"\n                    ],\n                    \"type\": \"object\"\n                },\n                \"customerId\": {\n                    \"type\": \"integer\"\n                },\n                \"customerName\": {\n                    \"type\": \"string\"\n                },\n                \"shippingAddress\": {\n                    \"properties\": {\n                        \"city\": {\n                            \"type\": \"string\"\n                        },\n                        \"state\": {\n                            \"type\": \"string\"\n                        },\n                        \"street\": {\n                            \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\n                        \"street\",\n                        \"city\",\n                        \"state\",\n                        \"zipCode\"\n                    ],\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\n                \"customerId\",\n                \"customerName\",\n                \"shippingAddress\"\n            ],\n            \"type\": \"object\"\n        },\n        \"isGift\": {\n            \"type\": \"boolean\"\n        },\n        \"items\": {\n            \"properties\": {\n                \"productId\": {\n                    \"type\": \"integer\"\n                },\n                \"productName\": {\n                    \"type\": \"string\"\n                },\n                \"quantity\": {\n                    \"type\": \"integer\"\n                },\n                \"unitPrice\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\n                \"productId\",\n                \"productName\",\n                \"quantity\",\n                \"unitPrice\"\n            ],\n            \"type\": \"object\"\n        },\n        \"orderDate\": {\n            \"type\": \"string\"\n        },\n        \"orderId\": {\n            \"type\": \"integer\"\n        },\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"tags\": {\n            \"items\": {\n                \"type\": \"string\"\n            },\n            \"type\": \"array\"\n        }\n    },\n    \"required\": [\n        \"orderId\",\n        \"orderDate\",\n        \"customer\",\n        \"items\",\n        \"status\"\n    ],\n    \"type\": \"object\"\n}",
      "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"properties\": {\n        \"customer\": {\n            \"properties\": {\n                \"billingAddress\": {\n                    \"properties\": {\n                        \"city\": {\n                            \"type\": \"string\"\n                        },\n                        \"state\": {\n                            \"type\": \"string\"\n                        },\n                        \"street\": {\n                            \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\n                        \"street\",\n                        \"city\",\n                        \"state\",\n                        \"zipCode\"\n                    ],\n                    \"type\": \"object\"\n                },\n                \"customerId\": {\n                    \"type\": \"integer\"\n                },\n                \"customerName\": {\n                    \"type\": \"string\"\n                },\n                \"shippingAddress\": {\n                    \"properties\": {\n                        \"city\": {\n                            \"type\": \"string\"\n                        },\n                        \"state\": {\n                            \"type\": \"string\"\n                        },\n                        \"street\": {\n                            \"type\": \"string\"\n                        },\n                        \"zipCode\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\n                        \"street\",\n                        \"city\",\n                        \"state\",\n                        \"zipCode\"\n                    ],\n                    \"type\": \"object\"\n                }\n            },\n            \"required\": [\n                \"customerId\",\n                \"customerName\",\n                \"shippingAddress\"\n            ],\n            \"type\": \"object\"\n        },\n        \"isGift\": {\n            \"type\": \"boolean\"\n        },\n        \"items\": {\n            \"properties\": {\n                \"productId\": {\n                    \"type\": \"integer\"\n                },\n                \"productName\": {\n                    \"type\": \"string\"\n                },\n                \"quantity\": {\n                    \"type\": \"integer\"\n                },\n                \"unitPrice\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"required\": [\n                \"productId\",\n                \"productName\",\n                \"quantity\",\n                \"unitPrice\"\n            ],\n            \"type\": \"object\"\n        },\n        \"orderDate\": {\n            \"type\": \"string\"\n        },\n        \"orderId\": {\n            \"type\": \"integer\"\n        },\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"tags\": {\n            \"items\": {\n                \"type\": \"string\"\n            },\n            \"type\": \"array\"\n        }\n    },\n    \"required\": [\n        \"orderId\",\n        \"orderDate\",\n        \"customer\",\n        \"items\",\n        \"status\"\n    ],\n    \"type\": \"object\"\n}"
    }
  },
  "connections": {},
  "contrib": "W3sicmVmIjoiZ2l0aHViLmNvbS90aWJjby9mbG9nby1nZW5lcmFsL3NyYy9hcHAvR2VuZXJhbCIsImlkIjoiR2VuZXJhbCIsInZlcnNpb24iOiIxLjYuNyIsInRhZyI6IjEuNi43LWIwMyIsIm5hbWUiOiJHZW5lcmFsIiwiczNsb2NhdGlvbiI6IlRpYmNvL0dlbmVyYWwiLCJpc1VzZXJFeHRlbnNpb24iOmZhbHNlfSx7InJlZiI6ImdpdGh1Yi5jb20vbWlsaW5kcGFuZGF2L2FjdGl2aXR5L2pzb25zY2hlbWF0cmFuc2Zvcm0iLCJ2ZXJzaW9uIjoiMS4wLjAiLCJ0YWciOiIxLjAuMCIsIm5hbWUiOiJKU09OU2NoZW1hVHJhbnNmb3JtZXIxIiwiaWQiOiJqc29uc2NoZW1hdHJhbnNmb3JtIiwiczNsb2NhdGlvbiI6IntVU0VSSUR9L0RlZmF1bHQvYWN0aXZpdHkvanNvbnNjaGVtYXRyYW5zZm9ybSIsImlzVXNlckV4dGVuc2lvbiI6dHJ1ZX0seyJyZWYiOiJnaXRodWIuY29tL3Byb2plY3QtZmxvZ28vY3VzdG9tLWV4dGVuc2lvbnMvYWN0aXZpdHkveHNkc2NoZW1hdHJhbnNmb3JtIiwidmVyc2lvbiI6IjEuMC4wIiwidGFnIjoiMS4wLjAiLCJuYW1lIjoiWFNEU2NoZW1hVHJhbnNmb3JtIiwiaWQiOiJ4c2RzY2hlbWF0cmFuc2Zvcm0iLCJzM2xvY2F0aW9uIjoie1VTRVJJRH0vRGVmYXVsdC9hY3Rpdml0eS94c2RzY2hlbWF0cmFuc2Zvcm0iLCJpc1VzZXJFeHRlbnNpb24iOnRydWV9LHsicmVmIjoiZ2l0aHViLmNvbS9taWxpbmRwYW5kYXYvYWN0aXZpdHkvYXZyb3NjaGVtYXRyYW5zZm9ybSIsInZlcnNpb24iOiIxLjAuMCIsInRhZyI6IjEuMC4wIiwibmFtZSI6IkF2cm9TY2hlbWFUcmFuc2Zvcm1lciIsImlkIjoiYXZyb3NjaGVtYXRyYW5zZm9ybSIsInMzbG9jYXRpb24iOiJ7VVNFUklEfS9EZWZhdWx0L2FjdGl2aXR5L2F2cm9zY2hlbWF0cmFuc2Zvcm0iLCJpc1VzZXJFeHRlbnNpb24iOnRydWV9XQ==",
  "metadata": {
    "endpoints": [
      {
        "protocol": "http",
        "port": "9999",
        "spec": {
          "name": "Schema_Converter_API",
          "version": "1.0.0"
        },
        "title": "ReceiveHTTPMessage",
        "swagger": {
          "swagger": "2.0",
          "info": {
            "title": "Schema_Converter_API",
            "version": "1.0.0",
            "description": "Simple REST Trigger"
          },
          "paths": {
            "/j2xsd/v1": {
              "post": {
                "summary": "JSON Schema to Other Format",
                "operationId": "post_j2xsd_v1",
                "parameters": [
                  {
                    "name": "body",
                    "in": "body",
                    "description": "request body parameter",
                    "required": true,
                    "schema": {
                      "$ref": "#/definitions/schema1"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Rest Response",
                    "schema": {
                      "$ref": "#/definitions/schema2"
                    }
                  }
                },
                "description": "Convert JSON Schema to XSD",
                "consumes": [
                  "application/json"
                ]
              }
            },
            "/xsd2json/v1": {
              "post": {
                "summary": "XSD To to Other Schema Format",
                "operationId": "post_xsd2json_v1",
                "parameters": [
                  {
                    "name": "body",
                    "in": "body",
                    "description": "request body parameter",
                    "required": true,
                    "schema": {
                      "$ref": "#/definitions/schema3"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Rest Response",
                    "schema": {
                      "$ref": "#/definitions/schema2"
                    }
                  }
                },
                "description": "Convert XSD To JSON Schema",
                "consumes": [
                  "application/json"
                ]
              }
            },
            "/json2xml": {
              "post": {
                "summary": "JSON To XML",
                "operationId": "post_json2xml",
                "parameters": [
                  {
                    "name": "body",
                    "in": "body",
                    "description": "request body parameter",
                    "required": true,
                    "schema": {
                      "$ref": "#/definitions/schema2"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Rest Response",
                    "schema": {
                      "type": "string"
                    }
                  }
                },
                "description": "Convert JSON Payload to XML Payload",
                "consumes": [
                  "application/json"
                ]
              }
            },
            "/a2o/v1": {
              "post": {
                "summary": "AVRO To Other Schema Format",
                "operationId": "post_a2o_v1",
                "parameters": [
                  {
                    "name": "body",
                    "in": "body",
                    "description": "request body parameter",
                    "required": true,
                    "schema": {
                      "$ref": "#/definitions/schema2"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Rest Response",
                    "schema": {
                      "$ref": "#/definitions/schema2"
                    }
                  }
                },
                "consumes": [
                  "application/json"
                ]
              }
            }
          },
          "definitions": {
            "schema1": {
              "type": "object",
              "properties": {
                "rootElementName": {
                  "type": "string"
                },
                "targetNamespace": {
                  "type": "string"
                },
                "jsonSchema": {
                  "type": "string"
                }
              }
            },
            "schema2": {
              "type": "object",
              "properties": {}
            },
            "schema3": {
              "type": "object",
              "properties": {
                "xsd": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    ],
    "flogoVersion": "2.25.7"
  }
}