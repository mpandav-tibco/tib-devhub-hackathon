apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: flogo-activity-avroschematransform
  title: Avro Schema Transform Activity
  description: Transform Avro schemas to JSON Schema and/or XSD formats with intelligent processing and flexible output options
  tags:
    - flogo
    - activity
    - schema
    - avro
    - json-schema
    - xsd
    - transformation
    - data-format
spec:
  owner: flogo-team
  type: flogo-activity
  parameters:
    - title: Activity Information
      required:
        - activity_name
        - namespace
      properties:
        activity_name:
          title: Activity Name
          type: string
          description: Name for your Avro Schema Transform activity instance
          pattern: '^[a-zA-Z][a-zA-Z0-9_-]*$'
          default: avroschematransform
        namespace:
          title: Namespace
          type: string
          description: Namespace for the activity (e.g., com.company.project)
          pattern: '^[a-zA-Z][a-zA-Z0-9_.]*$'
          default: com.example

    - title: Schema Configuration
      properties:
        default_output_format:
          title: Default Output Format
          type: string
          description: Default format for schema transformation
          enum:
            - json
            - xsd  
            - both
          enumNames:
            - JSON Schema Only
            - XSD Only
            - Both JSON Schema and XSD
          default: both
        default_root_element:
          title: Default Root Element Name
          type: string
          description: Default root element name for XSD generation
          default: root
        default_target_namespace:
          title: Default Target Namespace
          type: string
          description: Default target namespace for XSD generation (leave empty for no namespace)
          default: ""

    - title: Advanced Options
      properties:
        include_validation:
          title: Include Schema Validation
          type: boolean
          description: Include input schema validation logic
          default: true
        enable_debug_output:
          title: Enable Debug Output
          type: boolean
          description: Include debug logging and detailed error messages
          default: false
        support_complex_unions:
          title: Support Complex Unions
          type: boolean
          description: Enable advanced union type processing
          default: true

    - title: Repository Information
      required:
        - repo_name
      properties:
        repo_name:
          title: Repository Name
          type: string
          description: Name of the repository to create
          pattern: '^[a-zA-Z][a-zA-Z0-9_-]*$'
        description:
          title: Description
          type: string
          description: A brief description of your Avro Schema Transform activity
          default: Avro schema transformation activity for converting to JSON Schema and XSD

  steps:
    - id: fetch-base
      name: Fetch Base Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          activity_name: ${{ parameters.activity_name }}
          namespace: ${{ parameters.namespace }}
          default_output_format: ${{ parameters.default_output_format }}
          default_root_element: ${{ parameters.default_root_element }}
          default_target_namespace: ${{ parameters.default_target_namespace }}
          include_validation: ${{ parameters.include_validation }}
          enable_debug_output: ${{ parameters.enable_debug_output }}
          support_complex_unions: ${{ parameters.support_complex_unions }}
          repo_name: ${{ parameters.repo_name }}
          description: ${{ parameters.description }}

    - id: publish
      name: Publish to Repository
      action: publish:github
      input:
        repoUrl: github.com?repo=${{ parameters.repo_name }}
        description: ${{ parameters.description }}
        defaultBranch: main
        gitCommitMessage: 'Initial commit: Avro Schema Transform Activity'

    - id: register
      name: Register in Catalog
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in Catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}